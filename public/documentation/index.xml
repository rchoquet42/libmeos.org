<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on MEOS</title>
    <link>/documentation/</link>
    <description>Recent content in Documentation on MEOS</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 29 Jul 2022 13:57:17 +0200</lastBuildDate><atom:link href="/documentation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data model</title>
      <link>/documentation/datamodel/</link>
      <pubDate>Fri, 29 Jul 2022 13:57:17 +0200</pubDate>
      
      <guid>/documentation/datamodel/</guid>
      <description>MEOS provides temporal types, which represent the evolution on time of values of some element type, called the base type of the temporal type. For instance, temporal integers may be used to represent the evolution on time of the gear used by a moving car. In this case, the data type is temporal integer and the base type is integer. Similarly, a temporal float may be used to represent the evolution on time of the temperature of the interior of a car.</description>
    </item>
    
    <item>
      <title>Implementation of the Data Model</title>
      <link>/documentation/datamodel_implementation/</link>
      <pubDate>Fri, 29 Jul 2022 13:57:17 +0200</pubDate>
      
      <guid>/documentation/datamodel_implementation/</guid>
      <description>Although MEOS is written in C, it aims at using well-proven object-oriented concepts for its development. The data model for the temporal types is implemented using the following conceptual class hierarchy.
The superclass Temporal is a template class since it is used for all temporal types, such as temporal integers or temporal points. The specific type of an instance is defined in the temptype attribute. Temporal is also an abstract class, since it cannot be instantiated, only one its subtypes can be instantiated.</description>
    </item>
    
    <item>
      <title>Developer&#39;s Documentation</title>
      <link>/documentation/developer/</link>
      <pubDate>Fri, 29 Jul 2022 13:34:19 +0200</pubDate>
      
      <guid>/documentation/developer/</guid>
      <description>The developer&amp;rsquo;s documentation is available at docs.libmeos.org
Alternatively, you can generate the English developer&amp;rsquo;s documentation in HTML format from the source:
git clone --branch develop https://github.com/MobilityDB/MobilityDB MobilityDB mkdir MobilityDB/build cd MobilityDB/build cmake -DMEOS=on -DDOC_DEV=on .. make -j make doc_dev The resulting HTML documentation will be generated in the doxygen directory of the build directory.</description>
    </item>
    
  </channel>
</rss>
